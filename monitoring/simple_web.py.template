


from bottle import route, run, template
from datetime import datetime,timedelta
import pandas as pd
import os
import numpy as np
stat_path='/opt/GITHUB_REPOSITORY/log/stats/'
@route('/')
def index():
    out=""
    for folder in os.listdir(stat_path):
        out+=f"<a href='daily/{folder}/'>{folder}</a> <br/>"
    return out


@route('/daily/<folder>')
@route('/daily/<folder>/')
def daily(folder):
    root=f'{stat_path}/{folder}'
    datehs=sorted([datetime.strptime(datef.split('.')[0],"%Y%m%d-%H") for datef in os.listdir(root)])
    dates=sorted(np.unique([date.replace(hour=0) for date in datehs]))
    date_dic={day.strftime("%Y%m%d"): {h.strftime("%H"):h for h in datehs if day<=h and h<day+timedelta(days=1)} for day in dates}

    out="<table><tr><th>date</th><th>hour</th></tr>"
    for day,hours in date_dic.items():
        hh=' '.join([f"<a href='{day}-{h}'>{h}</a>" for h in hours])
        out+=f"<tr><td><a href='{day}'>{day}</a></td><td>{hh}</td></tr>"
    out+='</table>'
    return out


@route('/daily/<folder>/<date>')
@route('/daily/<folder>/<date>/')
def hourly(folder,date):
    root=f'{stat_path}/{folder}'
    try:
        hourly=datetime.strptime(date,"%Y%m%d-%H")
        
        df=pd.read_csv(f'{root}/{date}.csv')
        if folder=='users':
            return df.count().to_html()
        return df.to_html()
    except:
        alldf=''
        total=None
        for hour in os.listdir(root):
            if date not in hour:continue
            alldf+=f'<h5>{hour}</h5>'
            df=pd.read_csv(f'{root}/{hour}')
            df=df.set_index([col for col in df.columns if col in ['status','upstream','asn_name','country_code','province','city']])
            if total is None:
                total=df
            else:
                total=total.add(df,fill_value=0)
            if 'upload' in df.columns:
                df['up/s']=df['upload']/(df['connectiontime']+0.001)//1024
                df['dl/s']=df['download']/(df['connectiontime']+0.001)//1024
            if folder=='users':
                alldf+=df.count().to_html()    
            else:
                alldf+=df.to_html()

        if total is not None:
            if 'upload' in total.columns:
                total['up/s']=total['upload']/(total['connectiontime']+0.001)//1024
                total['dl/s']=total['download']/(total['connectiontime']+0.001)//1024
            alldf='<h1>total</h1>'+total.to_html()+"<h1>Hourly</h1>"+alldf
        return alldf
    


run(host='localhost', port=440)